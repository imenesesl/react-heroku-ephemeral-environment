name: Ephemeral Environment

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: imenesesl/heroku-ephemeral-environment@main

  setup-ephemeral-environment:
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Ephemeral Environment
        run: create
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          GITHUB_REPOSITORY_NAME: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.number }}

  destroy-ephemeral-environment:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Destroy Ephemeral Environment
        run: destroy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          GITHUB_REPOSITORY_NAME: ${{ github.repository }}
          GITHUB_PR_NUMBER: ${{ github.event.number }}
