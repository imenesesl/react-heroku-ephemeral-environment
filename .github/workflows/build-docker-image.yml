name: "Build Docker Image"
on:
  workflow_call:
    secrets:
      HEROKU_API_KEY:
        required: true
    inputs:
      repository_owner:
        required: true
        type: string
      repository_name:
        required: true
        type: string
      app_name:
        required: true
        type: string
      heroku_email:
        required: true
        type: string

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "imenesesl/heroku-ephemeral-environment"
          path: "docker"
      - name: üê≥ Creating Docker Tag
        run: |
          IMAGE_TAG="${{ inputs.repository_owner }}/${{ inputs.repository_name }}:${{ github.sha }}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG ./docker
  manage-ephemeral-environment:
    runs-on: ubuntu-latest
    steps:
      - run: git config --global --add safe.directory '*'
      - uses: actions/checkout@v2
      - name: üèóÔ∏è Manage Ephemeral Environment
        uses: imenesesl/heroku-ephemeral-environment@main
        with:
          args: ${{ github.event.action == 'closed' && 'destroy' || 'create' }}
        env:
          APP_NAME: ${{ inputs.app_name }}
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
          HEROKU_EMAIL: ${{inputs.heroku_email}}
  deploy-application:
    if: ${{ github.event.action != 'closed' }}
    needs: [manage-ephemeral-environment]
    runs-on: ubuntu-latest
    steps:
      - run: git config --global --add safe.directory '*'
      - uses: actions/checkout@v2
      - name: üöÄ Deploy Application
        uses: imenesesl/heroku-ephemeral-environment@main
        with:
          args: 'deploy'
        env:
          APP_NAME: ${{ inputs.app_name }}
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
          HEROKU_EMAIL: ${{inputs.heroku_email}}
